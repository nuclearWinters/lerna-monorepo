// source: auth.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require("google-protobuf");
var goog = jspb;
var global = function () {
  if (this) {
    return this;
  }
  if (typeof window !== "undefined") {
    return window;
  }
  if (typeof global !== "undefined") {
    return global;
  }
  if (typeof self !== "undefined") {
    return self;
  }
  return Function("return this")();
}.call(null);

goog.exportSymbol("proto.authPackage.CreateUserInput", null, global);
goog.exportSymbol("proto.authPackage.CreateUserPayload", null, global);
goog.exportSymbol("proto.authPackage.JWTMiddlewareInput", null, global);
goog.exportSymbol("proto.authPackage.JWTMiddlewarePayload", null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.authPackage.JWTMiddlewareInput = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.authPackage.JWTMiddlewareInput, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.authPackage.JWTMiddlewareInput.displayName =
    "proto.authPackage.JWTMiddlewareInput";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.authPackage.JWTMiddlewarePayload = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.authPackage.JWTMiddlewarePayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.authPackage.JWTMiddlewarePayload.displayName =
    "proto.authPackage.JWTMiddlewarePayload";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.authPackage.CreateUserInput = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.authPackage.CreateUserInput, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.authPackage.CreateUserInput.displayName =
    "proto.authPackage.CreateUserInput";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.authPackage.CreateUserPayload = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.authPackage.CreateUserPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.authPackage.CreateUserPayload.displayName =
    "proto.authPackage.CreateUserPayload";
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.authPackage.JWTMiddlewareInput.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.authPackage.JWTMiddlewareInput.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.authPackage.JWTMiddlewareInput} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.authPackage.JWTMiddlewareInput.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        refreshtoken: jspb.Message.getFieldWithDefault(msg, 1, ""),
        sessionid: jspb.Message.getFieldWithDefault(msg, 2, ""),
        accesstoken: jspb.Message.getFieldWithDefault(msg, 3, ""),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.authPackage.JWTMiddlewareInput}
 */
proto.authPackage.JWTMiddlewareInput.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.authPackage.JWTMiddlewareInput();
  return proto.authPackage.JWTMiddlewareInput.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.authPackage.JWTMiddlewareInput} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.authPackage.JWTMiddlewareInput}
 */
proto.authPackage.JWTMiddlewareInput.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setRefreshtoken(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setSessionid(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setAccesstoken(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.authPackage.JWTMiddlewareInput.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.authPackage.JWTMiddlewareInput.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.authPackage.JWTMiddlewareInput} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authPackage.JWTMiddlewareInput.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = message.getRefreshtoken();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getSessionid();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getAccesstoken();
  if (f.length > 0) {
    writer.writeString(3, f);
  }
};

/**
 * optional string refreshtoken = 1;
 * @return {string}
 */
proto.authPackage.JWTMiddlewareInput.prototype.getRefreshtoken = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};

/**
 * @param {string} value
 * @return {!proto.authPackage.JWTMiddlewareInput} returns this
 */
proto.authPackage.JWTMiddlewareInput.prototype.setRefreshtoken = function (
  value
) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string sessionId = 2;
 * @return {string}
 */
proto.authPackage.JWTMiddlewareInput.prototype.getSessionid = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};

/**
 * @param {string} value
 * @return {!proto.authPackage.JWTMiddlewareInput} returns this
 */
proto.authPackage.JWTMiddlewareInput.prototype.setSessionid = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional string accessToken = 3;
 * @return {string}
 */
proto.authPackage.JWTMiddlewareInput.prototype.getAccesstoken = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};

/**
 * @param {string} value
 * @return {!proto.authPackage.JWTMiddlewareInput} returns this
 */
proto.authPackage.JWTMiddlewareInput.prototype.setAccesstoken = function (
  value
) {
  return jspb.Message.setProto3StringField(this, 3, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.authPackage.JWTMiddlewarePayload.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.authPackage.JWTMiddlewarePayload.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.authPackage.JWTMiddlewarePayload} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.authPackage.JWTMiddlewarePayload.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        validaccesstoken: jspb.Message.getFieldWithDefault(msg, 1, ""),
        id: jspb.Message.getFieldWithDefault(msg, 2, ""),
        islender: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
        isborrower: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
        issupport: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.authPackage.JWTMiddlewarePayload}
 */
proto.authPackage.JWTMiddlewarePayload.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.authPackage.JWTMiddlewarePayload();
  return proto.authPackage.JWTMiddlewarePayload.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.authPackage.JWTMiddlewarePayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.authPackage.JWTMiddlewarePayload}
 */
proto.authPackage.JWTMiddlewarePayload.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setValidaccesstoken(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setId(value);
        break;
      case 3:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setIslender(value);
        break;
      case 4:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setIsborrower(value);
        break;
      case 5:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setIssupport(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.authPackage.JWTMiddlewarePayload.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.authPackage.JWTMiddlewarePayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.authPackage.JWTMiddlewarePayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authPackage.JWTMiddlewarePayload.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = message.getValidaccesstoken();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getIslender();
  if (f) {
    writer.writeBool(3, f);
  }
  f = message.getIsborrower();
  if (f) {
    writer.writeBool(4, f);
  }
  f = message.getIssupport();
  if (f) {
    writer.writeBool(5, f);
  }
};

/**
 * optional string validAccessToken = 1;
 * @return {string}
 */
proto.authPackage.JWTMiddlewarePayload.prototype.getValidaccesstoken =
  function () {
    return /** @type {string} */ (
      jspb.Message.getFieldWithDefault(this, 1, "")
    );
  };

/**
 * @param {string} value
 * @return {!proto.authPackage.JWTMiddlewarePayload} returns this
 */
proto.authPackage.JWTMiddlewarePayload.prototype.setValidaccesstoken =
  function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
  };

/**
 * optional string id = 2;
 * @return {string}
 */
proto.authPackage.JWTMiddlewarePayload.prototype.getId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};

/**
 * @param {string} value
 * @return {!proto.authPackage.JWTMiddlewarePayload} returns this
 */
proto.authPackage.JWTMiddlewarePayload.prototype.setId = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional bool isLender = 3;
 * @return {boolean}
 */
proto.authPackage.JWTMiddlewarePayload.prototype.getIslender = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 3, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.authPackage.JWTMiddlewarePayload} returns this
 */
proto.authPackage.JWTMiddlewarePayload.prototype.setIslender = function (
  value
) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};

/**
 * optional bool isBorrower = 4;
 * @return {boolean}
 */
proto.authPackage.JWTMiddlewarePayload.prototype.getIsborrower = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 4, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.authPackage.JWTMiddlewarePayload} returns this
 */
proto.authPackage.JWTMiddlewarePayload.prototype.setIsborrower = function (
  value
) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};

/**
 * optional bool isSupport = 5;
 * @return {boolean}
 */
proto.authPackage.JWTMiddlewarePayload.prototype.getIssupport = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 5, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.authPackage.JWTMiddlewarePayload} returns this
 */
proto.authPackage.JWTMiddlewarePayload.prototype.setIssupport = function (
  value
) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.authPackage.CreateUserInput.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.authPackage.CreateUserInput.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.authPackage.CreateUserInput} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.authPackage.CreateUserInput.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        nanoid: jspb.Message.getFieldWithDefault(msg, 1, ""),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.authPackage.CreateUserInput}
 */
proto.authPackage.CreateUserInput.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.authPackage.CreateUserInput();
  return proto.authPackage.CreateUserInput.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.authPackage.CreateUserInput} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.authPackage.CreateUserInput}
 */
proto.authPackage.CreateUserInput.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setNanoid(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.authPackage.CreateUserInput.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.authPackage.CreateUserInput.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.authPackage.CreateUserInput} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authPackage.CreateUserInput.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = message.getNanoid();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
};

/**
 * optional string nanoId = 1;
 * @return {string}
 */
proto.authPackage.CreateUserInput.prototype.getNanoid = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};

/**
 * @param {string} value
 * @return {!proto.authPackage.CreateUserInput} returns this
 */
proto.authPackage.CreateUserInput.prototype.setNanoid = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.authPackage.CreateUserPayload.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.authPackage.CreateUserPayload.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.authPackage.CreateUserPayload} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.authPackage.CreateUserPayload.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        done: jspb.Message.getFieldWithDefault(msg, 1, ""),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.authPackage.CreateUserPayload}
 */
proto.authPackage.CreateUserPayload.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.authPackage.CreateUserPayload();
  return proto.authPackage.CreateUserPayload.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.authPackage.CreateUserPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.authPackage.CreateUserPayload}
 */
proto.authPackage.CreateUserPayload.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setDone(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.authPackage.CreateUserPayload.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.authPackage.CreateUserPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.authPackage.CreateUserPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authPackage.CreateUserPayload.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = message.getDone();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
};

/**
 * optional string done = 1;
 * @return {string}
 */
proto.authPackage.CreateUserPayload.prototype.getDone = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};

/**
 * @param {string} value
 * @return {!proto.authPackage.CreateUserPayload} returns this
 */
proto.authPackage.CreateUserPayload.prototype.setDone = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

goog.object.extend(exports, proto.authPackage);
