services:
  kafka:
    image: "bitnami/kafka:latest"
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    healthcheck:
      test: kafka-topics.sh --list --bootstrap-server localhost:9092 || exit 1
      interval: 30s
      timeout: 10s
      retries: 5

  kafka-mongo:
    image: node:20
    volumes:
      - .:/usr/src/service
      - lerna-node-modules:/usr/src/service/node_modules
    working_dir: /usr/src/service/packages/kafka-mongo
    command: ["npm", "run", "start"]
    depends_on:
      kafka:
        condition: service_healthy
      mongo-fintech:
        condition: service_healthy
    deploy:
      mode: replicated
      replicas: 2

  backend-fintech-mongo:
    container_name: backend-fintech-mongo
    image: node:20
    volumes:
      - .:/usr/src/service
      - lerna-node-modules:/usr/src/service/node_modules
    working_dir: /usr/src/service/packages/backend-fintech-mongo
    command: ["npm", "run", "start"]
    ports:
      - "4000:443"
    depends_on:
      mongo-fintech:
        condition: service_healthy
      kafka:
        condition: service_healthy

  backend-fintech-mongo-cron:
    container_name: backend-fintech-mongo-cron
    image: node:20
    volumes:
      - .:/usr/src/service
      - lerna-node-modules:/usr/src/service/node_modules
    working_dir: /usr/src/service/packages/backend-fintech-mongo-cron
    command: ["npm", "run", "start"]
    depends_on:
      mongo-fintech:
        condition: service_healthy
      kafka:
        condition: service_healthy

  backend-auth-node:
    container_name: backend-auth-node
    image: node:20
    volumes:
      - .:/usr/src/service
      - lerna-node-modules:/usr/src/service/node_modules
    working_dir: /usr/src/service/packages/backend-auth-node
    command: ["npm", "run", "start"]
    ports:
      - "4002:443"
    depends_on:
      redis-fintech:
        condition: service_started
      mongo-fintech:
        condition: service_healthy

  grpc-auth-node:
    container_name: grpc-auth-node
    image: node:20
    volumes:
      - .:/usr/src/service
      - lerna-node-modules:/usr/src/service/node_modules
    working_dir: /usr/src/service/packages/grpc-auth-node
    command: ["npm", "run", "start"]
    depends_on:
      redis-fintech:
        condition: service_started
      mongo-fintech:
        condition: service_healthy

  grpc-fintech-node:
    container_name: grpc-fintech-node
    image: node:20
    volumes:
      - .:/usr/src/service
      - lerna-node-modules:/usr/src/service/node_modules
    working_dir: /usr/src/service/packages/grpc-fintech-node
    command: ["npm", "run", "start"]
    depends_on:
      mongo-fintech:
        condition: service_healthy

  frontend-fintech:
    container_name: frontend-fintech
    image: node:20
    volumes:
      - .:/usr/src/service
      - lerna-node-modules:/usr/src/service/node_modules
    working_dir: /usr/src/service/packages/frontend-fintech
    command: ["npm", "run", "start"]
    ports:
      - "8000:8000"
    environment:
      WDS_SOCKET_HOST: 127.0.0.1
      CHOKIDAR_USEPOLLING: true
      WATCHPACK_POLLING: true
      NODE_ENV: development

  mongo-fintech:
    container_name: mongo-fintech
    image: mongo
    volumes:
      - ./data:/data/db
    ports:
      - "27017:27017"
    logging:
      driver: none
    entrypoint: ["/usr/bin/mongod", "--bind_ip_all"]
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 5

  redis-fintech:
    container_name: redis-fintech
    command: redis-server --appendonly yes
    image: redis
    ports:
      - "6379:6379"
    volumes:
      - ./redis:/data
    logging:
      driver: none

volumes:
  lerna-node-modules:
    external: true
